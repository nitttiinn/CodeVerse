// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Defining the User Role
enum UserRole{
  USER
  ADMIN
  CREATOR
}

enum Difficulty {
  EASY
  MEDIUM
  HARD
}

// Defining the User Model
model User{
  id String @id @default(uuid())
  email String @unique
  name String?
  username String @unique
  bio String?
  image String?
  password String?
  role UserRole @default(USER)
  isVerified Boolean @default(false)
  verificationToken String? @unique
  refreshToken String? 
  verificationTokenExpiresAt DateTime?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  problems Problem[]
}

model Problem{
  id String @id @default(uuid())
  title String
  description String
  difficulty Difficulty
  tags String[]
  userId String
  examples Json
  constraints String
  hints String?
  editiorial String?
  testcases Json
  codeSnippets Json
  referenceSolutions Json
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}